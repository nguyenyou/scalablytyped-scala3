//| mill-version: 1.0.4
//| mvnDeps: ["com.lihaoyi::mill-contrib-scoverage:$MILL_VERSION"]

package build

import mill.*, scalalib.*, scalajslib.*, scalajslib.api.*

import mill.contrib.scoverage.{ScoverageModule, ScoverageReport}
object Versions {
    val scala3 = "3.7.2"
    val sjs = "1.19.0"
    val sjsdom = "2.8.0"
    val laminar = "17.2.1"
    val circe = "0.14.14"
    val sourcecode = "0.4.3-M5"
    val fansi = "0.4.0"
    val utest = "0.9.0"
    val scalaParserCombinators = "2.4.0"
    val scoverage = "2.1.1"
}

trait BaseModule extends ScalaModule with ScoverageModule  {
  def scalaVersion = Versions.scala3

  def scalacOptions = Seq(
    "-rewrite",
    "-source", "3.7-migration",
    "-feature",
    "-deprecation",
    "-language:implicitConversions"
  )

  def mvnDeps = Seq(
    mvn"com.lihaoyi::sourcecode::${Versions.sourcecode}",
    mvn"com.lihaoyi::fansi:${Versions.fansi}",
    mvn"org.scala-lang.modules::scala-parser-combinators::${Versions.scalaParserCombinators}",
    mvn"io.circe::circe-core::${Versions.circe}",
    mvn"io.circe::circe-generic::${Versions.circe}",
    mvn"io.circe::circe-parser::${Versions.circe}",
  )

  def scoverageVersion = Versions.scoverage

  object test extends ScoverageTests with TestModule.Utest {
    def mvnDeps = Seq(mvn"com.lihaoyi::utest:${Versions.utest}")
    def testFramework = "utest.runner.Framework"
  }
}

object core extends BaseModule
object logging extends BaseModule
object cli extends BaseModule
object phases extends BaseModule {
    def moduleDeps = Seq(core, logging)
}
object ts extends BaseModule with ScoverageModule {
  def moduleDeps = Seq(core, logging)

}

object scalajs extends BaseModule {
    def moduleDeps = Seq(core, logging)
}

object scoverage extends ScoverageReport {
    override def scalaVersion     = Versions.scala3
    override def scoverageVersion = Versions.scoverage
}